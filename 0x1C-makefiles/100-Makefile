# Compiler
CC = gcc

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Emacs temporary files
ETMP = $(wildcard *~)

# Vim temporary files
VTMP = $(wildcard *.swp)

# Essential file
ESF := "$(wildcard m.h)"

# Sources
SRC = main.c school.c

# Objects
OBJ = $(OBJ:.c=.o)

# The executable
NAME = school

# makefile should not compile if the header file 'm.h' is missing

ifneq ($(strip $(ESF)), "")

all: $(SRC:.c=.o) m.h
	$(CC) $? -o $(NAME)

.PHONY: clean oclean fclean re

clean: # delete all temporary files along with the executable
	$(RM) $(ETMP) $(VTMP) $(NAME)

oclean: # delete the object files
	$(RM) $(SRC:.c=.o)

fclean: oclean clean # delete all temporary files, executable and the object files

re: oclean all # force recompilation of all source files

endif
